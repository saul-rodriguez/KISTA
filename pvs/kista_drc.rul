// PVS DRC RULE DECK FOR PDK KISTA_1UM_SOI


//--- Original DRC switch ---------------------
//#define CHECK_DFM
//#define SUGGESTED_CHECK
//#define CHECK_DENSITY
//#define OUTPUT_DENSITY_RDB
//---------------------------------------------

// -----------------------------------------------------------------------------
// VERSION v0.1 (initial version) 2021-11-24 
// -----------------------------------------------------------------------------
// Initial Version -  PVL DRC 
// -----------------------------------------------------------------------------


layout_path "CELLNAME.gds" gdsii;
layout_primary "CELLNAME";
results_db -drc "CELLNAME.db" -ascii;

input_scale 2000;
grid 5;
unit -length u;
text_depth -primary;

flag -nonsimple yes;

rule offgrid_check {
    caption Grid violation;
    layout_input -offgrid;
}

rule ortho_45_check {
    caption Orthogonal and 45 degree violation;
    layout_input -skew;
}

rule acute_check {
    caption Acute angle  violation;
    layout_input -acute;
}

//**********************//
//* Layer Definitions  *//
//**********************//

layer_def empty 999;

layer_def Oxide 1034;
layer_map 1 -datatype 0 1034;

layer_def Poly 1040;
layer_map 3 -datatype 0 1040;

layer_def Cont 1002;
layer_map 6 -datatype 0 1002;

layer_def Metal1 1016;
layer_map 7 -datatype -le 5 1016;

layer_def Metal2 1017;
layer_map 9 -datatype -le 5 1017;

layer_def Metal3 1018;
layer_map 11 -datatype -le 5 1018;

layer_def Metal4 1019;
layer_map 31 -datatype -le 5 1019;

layer_def Via1 1045;
layer_map 8 -datatype 0 1045;

layer_def Via2 1046;
layer_map 10 -datatype 0 1046;

layer_def Via3 1047;
layer_map 30 -datatype 0 1047;

layer_def KTH_openpad 1048;
layer_map 172 -datatype 0 1048;

//*******************//
//* Auxiliar Layers *//
//*******************//

or Metal1 Metal2 M12
or Metal3 Metal4 M34
or M12 M34 Metal_all

and Cont Via1 Cont_Via1_ov
and Via1 Via2 Via1_Via2_ov
and Via2 Via3 Via2_Via3_ov


//*******************//
//* Width checks    *//
//*******************//

// width check for Oxide <2.0 
rule OXIDE.W.1 {
    caption OXIDEW.1: Oxide width must be >= 2.0 um;
    inte Oxide Oxide -lt 2.0 -output region -singular -abut lt 90;
}

// width check for Poly <1.0 
rule POLY.W.1 {
    caption POLY.W.1: Poly width must be >= 1.0 um;
    inte Poly Poly -lt 1.0 -output region -singular -abut lt 90;
}

// width check for Cont < 1.0 
rule CONT.W.1 {
    caption CONT.W.1: Cont width must be >= 1.0 um;
    inte Cont Cont -lt 1.0 -output region -singular -abut lt 90;
}

// width check for metal1 <2.0 
rule METAL1.W.1 {
    caption METAL1.W.1: Metal1 width must be >= 2.0 um;
    inte Metal1 Metal1 -lt 2.0 -output region -singular -abut lt 90;
}

// width check for metal2 <2.0 
rule METAL2.W.1 {
    caption METAL2.W.1: Metal2 width must be >= 2.0 um;
    inte Metal2 Metal2 -lt 2.0 -output region -singular -abut lt 90;
}

// width check for metal3 <2.0 
rule METAL3.W.1 {
    caption METAL3.W.1: Metal3 width must be >= 2.0 um;
    inte Metal3 Metal3 -lt 2.0 -output region -singular -abut lt 90;
}

// width check for metal4 <2.0 
rule METAL4.W.1 {
    caption METAL4.W.1: Metal4 width must be >= 2.0 um;
    inte Metal4 Metal4 -lt 2.0 -output region -singular -abut lt 90;
}

// width check for KTH_openpad < 88.0 
rule KTH_OPENPAD.W.1 {
    caption KTH_OPENPAD.W.1: KTH_openpad width must be >= 88.0 um;
    inte KTH_openpad KTH_openpad -lt 88.0 -output region -singular -abut lt 90;
}

//************//
//* Spacings *//
//************//

// spacing check for Oxide <2.0 
rule OXIDE.SP.1.1 {
    caption OXIDE.SP.1.1: Oxide to Oxide spacing must be >= 2.0 um;
    exte Oxide Oxide -lt 2.0 -output region -singular -abut lt 90;
}

// spacing check for Poly <1.0 
rule POLY.SP.1.1 {
    caption POLY.SP.1.1: Poly to Poly spacing must be >= 1.0 um;
    exte Poly Poly -lt 1.0 -output region -singular -abut lt 90;
}

// spacing check for Metal1 <2.0 
rule METAL1.SP.1.1 {
    caption METAL1.SP.1.1: Metal1 to Metal1 spacing must be >= 2.0 um;
    exte Metal1 Metal1 -lt 2.0 -output region -singular -abut lt 90;
}

// spacing check for Metal2 <2.0 
rule METAL2.SP.1.1 {
    caption METAL1.SP.1.1: Metal2 to Metal2 spacing must be >= 2.0 um;
    exte Metal2 Metal2 -lt 2.0 -output region -singular -abut lt 90;
}

// spacing check for Metal3 <2.0 
rule METAL3.SP.1.1 {
    caption METAL1.SP.1.1: Metal3 to Metal3 spacing must be >= 2.0 um;
    exte Metal3 Metal3 -lt 2.0 -output region -singular -abut lt 90;
}

// spacing check for Metal4 <2.0 
rule METAL4.SP.1.1 {
    caption METAL1.SP.1.1: Metal4 to Metal4 spacing must be >= 2.0 um;
    exte Metal4 Metal4 -lt 2.0 -output region -singular -abut lt 90;
}

// spacing check for Cont <1.0 
rule CONT.SP.1.1 {
    caption CONT.SP.1.1: Cont to Cont spacing must be >= 1.0 um;
    exte Cont Cont -lt 1.0 -output region -singular -abut lt 90;
}

// spacing check for Cont - Via1 <1.0 
rule CONT.SP.1.2 {
    caption CONT.SP.1.2: Cont to Via1 spacing must be >= 1.0 um;
    exte Cont Via1 -lt 1.0 -output region -singular -abut lt 90;
}

// spacing check for Via1 <1.0 
rule VIA1.SP.1.1 {
    caption VIA1.SP.1.1: Via1 to Via1 spacing must be >= 1.0 um;
    exte Via1 Via1 -lt 1.0 -output region -singular -abut lt 90;
}

// spacing check for Via1 - Via2 <1.0 
rule VIA1.SP.1.2 {
    caption VIA1.SP.1.2: Via1 to Via2 spacing must be >= 1.0 um;
    exte Via1 Via2 -lt 1.0 -output region -singular -abut lt 90;
}

// spacing check for Via2 <1.0 
rule VIA2.SP.1.1 {
    caption VIA2.SP.1.1: Via2 to Via2 spacing must be >= 1.0 um;
    exte Via2 Via2 -lt 1.0 -output region -singular -abut lt 90;
}

// spacing check for Via3 - Via2 <1.0 
rule VIA2.SP.1.2 {
    caption VIA2.SP.1.2: Via2 to Via3 spacing must be >= 1.0 um;
    exte Via2 Via3 -lt 1.0 -output region -singular -abut lt 90;
}


//**************//
//* Enclosures *//
//**************//

// enclose check for Cont inside Metal1 <0.5  insideOnly
rule CONT.E.1 {
    caption CONT.E.1: Metal1 to Cont enclosure must be >= 0.5 um;
    enc Cont metal1 -lt 0.5 -output region -singular -abut lt 90 -outside_also;
}

// enclose check for Cont inside Poly <0.5  insideOnly
rule CONT.E.2 {
    caption CONT.E.2: Poly to Cont enclosure must be >= 0.5 um;
	enc Cont Poly -lt 0.5 -abut lt 90 -overlap -single_point;
    //enc Cont Poly -lt 0.5 -output region -singular -abut lt 90 -outside_also;
}

// enclose check for Cont inside Oxide <0.5  insideOnly
rule CONT.E.3 {
    caption CONT.E.3: Oxide to Cont enclosure must be >= 0.5 um;
	enc Cont Oxide -lt 0.5 -abut lt 90 -overlap -single_point;
    //enc Cont Oxide -lt 0.5 -output region -singular -abut lt 90 -outside_also;
}

// enclose check for Via1 inside Metal1 <0.5  insideOnly
rule VIA1.E.1 {
    caption VIA1.E.1: Metal1 to Via1 enclosure must be >= 0.5 um;
    enc Via1 metal1 -lt 0.5 -output region -singular -abut lt 90 -outside_also;
}

// enclose check for Via1 inside Metal2 <0.5  insideOnly
rule VIA1.E.2 {
    caption VIA1.E.2: Metal2 to Via1 enclosure must be >= 0.5 um;
    enc Via1 metal2 -lt 0.5 -output region -singular -abut lt 90 -outside_also;
}

// enclose check for Via2 inside Metal2 <0.5  insideOnly
rule VIA2.E.1 {
    caption VIA2.E.1: Metal2 to Via2 enclosure must be >= 0.5 um;
    enc Via2 metal2 -lt 0.5 -output region -singular -abut lt 90 -outside_also;
}

// enclose check for Via2 inside Metal3 <0.5  insideOnly
rule VIA2.E.2 {
    caption VIA2.E.2: Metal3 to Via2 enclosure must be >= 0.5 um;
    enc Via2 metal3 -lt 0.5 -output region -singular -abut lt 90 -outside_also;
}

// enclose check for Via3 inside Metal3 <0.5  insideOnly
rule VIA3.E.1 {
    caption VIA3.E.1: Metal3 to Via3 enclosure must be >= 0.5 um;
    enc Via3 metal3 -lt 0.5 -output region -singular -abut lt 90 -outside_also;
}

// enclose check for Via3 inside Metal4 <0.5  insideOnly
rule VIA3.E.2 {
    caption VIA3.E.2: Metal4 to Via3 enclosure must be >= 0.5 um;
    enc Via3 metal4 -lt 0.5 -output region -singular -abut lt 90 -outside_also;
}

// enclose check for KTH_openpad inside Metal_all <6.0  insideOnly
rule KTH_OPENPAD.E.1 {
    caption KTH_OPENPAD.E.1: Metal[X] to KTH_openpad enclosure must be >= 6.0 um;
    enc KTH_openpad metal_all -lt 6.0 -output region -singular -abut lt 90 -outside_also;
}

//************************//
//* Non-allowed overlaps *//
//************************//

// overlap check Via1 - Cont
rule CONT.OV.1 {
    caption CONT.OV.1: Via1 over Cont not allowed;
    area Cont_Via1_ov -gt 0.0;
}

// overlap check Via2 - Via1
rule VIA1.OV.1 {
    caption VIA1.OV.1: Via2 over Via1 not allowed;
    area Via1_Via2_ov -gt 0.0;
}

// overlap check Via2 - Via1
rule VIA2.OV.1 {
    caption VIA2.OV.1: Via3 over Via2 not allowed;
    area Via2_Via3_ov -gt 0.0;
}






      







